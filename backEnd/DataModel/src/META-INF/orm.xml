<?xml version="1.0" encoding="UTF-8"?>
<entity-mappings version="2.0"
	xmlns="http://java.sun.com/xml/ns/persistence/orm" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/persistence/orm http://java.sun.com/xml/ns/persistence/orm_2_0.xsd">
	<persistence-unit-metadata>
		<persistence-unit-defaults>
			<access>PROPERTY</access>
		</persistence-unit-defaults>
	</persistence-unit-metadata>
	<entity class="com.tramex.sisoprega.dto.RancherUser">
		<table name="cat_rancher_user" />
		<named-query name="RANCHERUSER_BY_ID">
			<description>Retrieve a single record of rancher user by its record id</description>
			<query>SELECT rUser FROM RancherUser rUser WHERE rUser.rancherUserId = :Id</query>
		</named-query>
		<named-query name="RANCHERUSER_BY_USER_NAME">
			<description>Retrieves a single record of rancher user by its user id</description>
			<query>SELECT rUser FROM RancherUser rUser WHERE rUser.user_name = :userName</query>
		</named-query>
		<named-query name="ALL_RANCHERUSERS">
			<description>Retrieve all records of rancher users</description>
			<query>SELECT rUser FROM RancherUser rUser ORDER BY rUser.rancherUserId</query>
		</named-query>
		<attributes>
			<id name="rancherUserId">
				<column name="record_id" />
				<generated-value strategy="IDENTITY" />
			</id>
			<basic name="user_name">
				<column name="user_name" />
			</basic>
			<many-to-one name="rancher" optional="false">
				<join-column name="rancher_id" referenced-column-name="rancher_id" nullable="false" />
			</many-to-one>
		</attributes>
	</entity>
	<entity class="com.tramex.sisoprega.dto.Rancher">
		<table name="cat_person_rancher" />
		<named-query name="RANCHER_BY_ID">
			<description>Get a single rancher by rancherId</description>
			<query>SELECT r FROM Rancher r WHERE r.rancherId = :Id</query>
		</named-query>
		<named-query name="ALL_RANCHERS">
			<description>Get all ranchers in database</description>
			<query>SELECT r FROM Rancher r ORDER BY r.lastName, r.motherName, r.firstName, r.rancherId</query>
		</named-query>
		<named-query name="RANCHER_BY_USER_NAME">
			<description>Get the rancher in database that belongs to the given user name</description>
			<query>SELECT r FROM Rancher r inner join r.rancherUser rUser WHERE rUser.user_name = :userName</query>
		</named-query>
		<attributes>
			<id name="rancherId">
				<column name="rancher_id" />
				<generated-value strategy="IDENTITY" />
			</id>
			<basic name="birthDate">
				<column name="birth_date" />
				<temporal>DATE</temporal>
			</basic>
			<basic name="emailAddress">
				<column name="email_add" length="150" />
			</basic>
			<basic name="firstName">
				<column name="first_name" length="50" nullable="false" />
			</basic>
			<basic name="lastName">
				<column name="last_name" length="50" nullable="false" />
			</basic>
			<basic name="motherName">
				<column name="mother_name" length="50" />
			</basic>
			<basic name="phone">
				<column name="telephone" length="20" />
			</basic>
			<basic name="phone2">
				<column name="telephone_2" length="20" />
			</basic>
			<basic name="phone3">
				<column name="telephone_3" length="20" />
			</basic>
			<basic name="smsPhoneChosen">
				<column name="sms_phone_chosen" />
			</basic>
			<one-to-many name="rancherInvoice" mapped-by="rancher" target-entity="com.tramex.sisoprega.dto.RancherInvoice" fetch="EAGER" orphan-removal="true">
				<cascade>
					<cascade-all/>
				</cascade>
			</one-to-many>
			<one-to-many name="rancherContact" mapped-by="rancher" target-entity="com.tramex.sisoprega.dto.RancherContact" fetch="EAGER" orphan-removal="true">
				<cascade>
					<cascade-all/>
				</cascade>
			</one-to-many>
			<one-to-many name="rancherUser" mapped-by="rancher" target-entity="com.tramex.sisoprega.dto.RancherUser" fetch="EAGER" orphan-removal="true">
				<cascade>
					<cascade-all/>
				</cascade>
			</one-to-many>
		</attributes>
	</entity>
	<entity class="com.tramex.sisoprega.dto.EnterpriseRancher">
		<table name="cat_enterprise_rancher" />
		<named-query name="ENTERPRISERANCHER_BY_ID">
			<description>Get a single enterprise rancher by enterpriseId</description>
			<query>SELECT enterprise FROM EnterpriseRancher enterprise WHERE enterprise.enterpriseRancherId=:Id</query>
		</named-query>
		<named-query name="ALL_ENTERPRISERANCHERS">
			<description>Get all enterprise ranchers in database</description>
			<query>SELECT enterprise FROM EnterpriseRancher enterprise ORDER BY enterprise.legalName, enterprise.legalId, enterprise.state</query>
		</named-query>
		<named-query name="ENTERPRISERANCHER_BY_RFC">
			<description>Get a single enterprise rancher record by legal_id</description>
			<query>SELECT enterprise FROM EnterpriseRancher enterprise WHERE enterprise.legalId = :rfc</query>
		</named-query>
		<named-query name="ENTERPRISERANCHER_BY_LEGAL_NAME">
			<description>Get a single enterprise rancher record by legal_name</description>
			<query>SELECT enterprise FROM EnterpriseRancher enterprise WHERE enterprise.legalName = :legalName</query>
		</named-query>
		<named-query name="ENTERPRISE_BY_USER_NAME">
			<description>Get the rancher in database that belongs to the given user name</description>
			<query>SELECT r FROM EnterpriseRancher r inner join r.enterpriseUser rUser WHERE rUser.user_name = :userName</query>
		</named-query>
		<attributes>
			<id name="enterpriseRancherId">
				<column name="enterprise_id" />
				<generated-value strategy="IDENTITY" />
			</id>
			<basic name="addressOne">
				<column name="address_one" length="100" />
			</basic>
			<basic name="addressTwo">
				<column name="address_two" length="100" />
			</basic>
			<basic name="city">
				<column name="city" length="80" />
			</basic>
			<basic name="legalId">
				<column name="legal_id" length="13" unique="true" />
			</basic>
			<basic name="legalName">
				<column name="legal_name" length="100" unique="true" />
			</basic>
			<basic name="state">
				<column name="address_state" length="80" />
			</basic>
			<basic name="telephone">
				<column name="telephone" length="20" />
			</basic>
			<basic name="telephone2">
				<column name="telephone_2" length="20" />
			</basic>
			<basic name="telephone3">
				<column name="telephone_3" length="20" />
			</basic>
			<basic name="smsPhoneChosen">
				<column name="sms_phone_chosen" />
			</basic>
			<basic name="zipCode">
				<column name="zip_code" length="9" />
			</basic>
			<one-to-many name="rancherInvoice" mapped-by="rancher" target-entity="com.tramex.sisoprega.dto.EnterpriseInvoice" fetch="EAGER" orphan-removal="true">
				<cascade>
					<cascade-all/>
				</cascade>
			</one-to-many>
			<one-to-many name="enterpriseContact" mapped-by="enterpriseRancher" target-entity="com.tramex.sisoprega.dto.EnterpriseContact" fetch="EAGER" orphan-removal="true">
				<cascade>
					<cascade-all/>
				</cascade>
			</one-to-many>
			<one-to-many name="enterpriseUser" mapped-by="rancher" target-entity="com.tramex.sisoprega.dto.EnterpriseUser" fetch="EAGER" orphan-removal="true">
				<cascade>
					<cascade-all/>
				</cascade>
			</one-to-many>
		</attributes>
	</entity>
	<entity class="com.tramex.sisoprega.dto.RancherInvoice">
		<table name="cat_rancher_invoice" />
		<named-query name="RANCHERINVOICE_BY_ID">
			<description>Get a single rancher invoice record using it's id</description>
			<query>SELECT invoice FROM RancherInvoice invoice WHERE invoice.rancherInvoiceId = :Id</query>
		</named-query>
		<named-query name="RANCHERINVOICE_BY_RFC">
			<description>Get a single rancher invoicing record by legal_id</description>
			<query>SELECT invoice FROM RancherInvoice invoice WHERE invoice.legalId = :rfc</query>
		</named-query>
		<named-query name="RANCHERINVOICE_BY_LEGAL_NAME">
			<description>Get a single rancher invoicing record by legal_name</description>
			<query>SELECT invoice FROM RancherInvoice invoice WHERE invoice.legalName = :legalName</query>
		</named-query>
		<named-query name="ALL_RANCHERINVOICES">
			<description>Get a single rancher invoice record using it's id</description>
			<query>SELECT invoice FROM RancherInvoice invoice ORDER BY invoice.rancherInvoiceId</query>
		</named-query>
		<attributes>
			<id name="rancherInvoiceId">
				<column name="rancher_invoice_id" />
				<generated-value strategy="IDENTITY" />
			</id>
			<basic name="addressOne">
				<column name="address_one" length="100" nullable="false" />
			</basic>
			<basic name="addressState">
				<column name="address_state" length="80" nullable="false" />
			</basic>
			<basic name="addressTwo">
				<column name="address_two" length="100" />
			</basic>
			<basic name="city">
				<column name="city" length="80" nullable="false" />
			</basic>
			<basic name="legalId">
				<column name="legal_id" length="13" nullable="false" unique="true" />
			</basic>
			<basic name="legalName">
				<column name="legal_name" length="100" nullable="false"
					unique="true" />
			</basic>
			<basic name="zipCode">
				<column name="zip_code" nullable="false" />
			</basic>
			<many-to-one name="rancher" optional="false">
				<join-column name="rancher_id" referenced-column-name="rancher_id" nullable="false" />
			</many-to-one>
		</attributes>
	</entity>
	<entity class="com.tramex.sisoprega.dto.EnterpriseInvoice">
		<table name="cat_rancher_invoice" />
		<named-query name="ENTERPRISEINVOICE_BY_ID">
			<description>Get a single rancher invoice record using it's id</description>
			<query>SELECT invoice FROM EnterpriseInvoice invoice WHERE invoice.enterpriseInvoiceId = :Id</query>
		</named-query>
		<named-query name="ALL_ENTERPRISEINVOICES">
			<description>Get a single rancher invoice record using it's id</description>
			<query>SELECT invoice FROM EnterpriseInvoice invoice ORDER BY invoice.enterpriseInvoiceId</query>
		</named-query>
		<attributes>
			<id name="enterpriseInvoiceId">
				<column name="rancher_invoice_id" />
				<generated-value strategy="IDENTITY" />
			</id>
			<basic name="addressOne">
				<column name="address_one" length="100" nullable="false" />
			</basic>
			<basic name="addressState">
				<column name="address_state" length="80" nullable="false" />
			</basic>
			<basic name="addressTwo">
				<column name="address_two" length="100" />
			</basic>
			<basic name="city">
				<column name="city" length="80" nullable="false" />
			</basic>
			<basic name="legalId">
				<column name="legal_id" length="13" nullable="false" unique="true" />
			</basic>
			<basic name="legalName">
				<column name="legal_name" length="100" nullable="false"
					unique="true" />
			</basic>
			<basic name="zipCode">
				<column name="zip_code" nullable="false" />
			</basic>
			<many-to-one name="rancher" optional="false">
				<join-column name="rancher_id" referenced-column-name="enterprise_id" nullable="false" />
			</many-to-one>
		</attributes>
	</entity>
	<entity class="com.tramex.sisoprega.dto.RancherContact">
		<table name="cat_rancher_contact" />
		<named-query name="RANCHERCONTACT_BY_ID">
			<description>Get a rancher contact by its contact Id</description>
			<query>
			SELECT contact 
			FROM RancherContact contact 
			WHERE contact.rancherContactId = :Id</query>
		</named-query>
		<named-query name="ALL_RANCHERCONTACTS">
			<description>Get all rancher contacts</description>
			<query>
			SELECT contact 
			FROM RancherContact contact 
			ORDER BY contact.rancherContactId</query>
		</named-query>
		<attributes>
			<id name="rancherContactId">
				<column name="contact_id" />
				<generated-value strategy="IDENTITY" />
			</id>
			<basic name="firstName">
				<column name="first_name" nullable="false" length="50" />
			</basic>
			<basic name="lastName">
				<column name="last_name" nullable="false" length="50" />
			</basic>
			<basic name="motherName">
				<column name="mother_name" length="50" />
			</basic>
			<basic name="birthDate">
				<column name="birth_date" />
				<temporal>DATE</temporal>
			</basic>
			<basic name="emailAddress">
				<column name="email_add" length="150" />
			</basic>
			<basic name="addressOne">
				<column name="address_one" length="100" />
			</basic>
			<basic name="addressTwo">
				<column name="address_two" length="100" />
			</basic>
			<basic name="addressState">
				<column name="address_state" length="80" />
			</basic>
			<basic name="zipCode">
				<column name="zip_code" />
			</basic>
			<many-to-one name="rancher" optional="false">
				<join-column name="rancher_id" referenced-column-name="rancher_id" nullable="false" />
			</many-to-one>
		</attributes>
	</entity>
	<entity class="com.tramex.sisoprega.dto.EnterpriseContact">
		<table name="cat_rancher_contact" />
		<named-query name="ENTERPRISECONTACT_BY_ID">
			<description>Get an enterprise contact by its contact id</description>
			<query>
			SELECT contact
			FROM EnterpriseContact contact
			WHERE contact.enterpriseContactId = :Id
			</query>
		</named-query>
		<named-query name="ALL_ENTERPRISECONTACTS">
			<description>Get all enterprise contacts</description>
			<query>
			SELECT contact
			FROM EnterpriseContact contact
			ORDER BY contact.enterpriseContactId
			</query>
		</named-query>
		<attributes>
			<id name="enterpriseContactId">
				<column name="contact_id" />
				<generated-value strategy="IDENTITY" />
			</id>
			<basic name="firstName">
				<column name="first_name" nullable="false" length="50" />
			</basic>
			<basic name="lastName">
				<column name="last_name" nullable="false" length="50" />
			</basic>
			<basic name="motherName">
				<column name="mother_name" length="50" />
			</basic>
			<basic name="birthDate">
				<column name="birth_date" />
				<temporal>DATE</temporal>
			</basic>
			<basic name="emailAddress">
				<column name="email_add" length="150" />
			</basic>
			<basic name="addressOne">
				<column name="address_one" length="100" />
			</basic>
			<basic name="addressTwo">
				<column name="address_two" length="100" />
			</basic>
			<basic name="addressState">
				<column name="address_state" length="80" />
			</basic>
			<basic name="zipCode">
				<column name="zip_code" />
			</basic>
			<many-to-one name="enterpriseRancher" optional="false">
				<join-column name="rancher_id" referenced-column-name="enterprise_id" nullable="false" />
			</many-to-one>
		</attributes>
	</entity>
	<entity class="com.tramex.sisoprega.dto.EnterpriseUser">
		<table name="cat_rancher_user" />
		<named-query name="ENTERPRISEUSER_BY_ID">
			<description>Retrieve a single record of rancher user by its record id</description>
			<query>SELECT rUser FROM RancherUser rUser WHERE rUser.rancherUserId = :Id</query>
		</named-query>
		<named-query name="ALL_ENTERPRISEUSERS">
			<description>Retrieve all records of rancher users</description>
			<query>SELECT rUser FROM RancherUser rUser ORDER BY rUser.rancherUserId</query>
		</named-query>
		<attributes>
			<id name="enterpriseUserId">
				<column name="record_id" />
				<generated-value strategy="IDENTITY" />
			</id>
			<basic name="user_name">
				<column name="user_name" />
			</basic>
			<many-to-one name="rancher" optional="false">
				<join-column name="rancher_id" referenced-column-name="enterprise_id" nullable="false" />
			</many-to-one>
		</attributes>
	</entity>
	<entity class="com.tramex.sisoprega.dto.CattleClass">
		<table name="cat_cattle_class" />
		<named-query name="CATTLECLASS_BY_ID">
			<description>Retrieves a single cattle class record by it's ID</description>
			<query>SELECT cattle FROM CattleClass cattle WHERE cattle.cattleClassId = :Id</query>
		</named-query>
		<named-query name="ALL_CATTLECLASSS">
			<description>Retrieves all cattle class records from database</description>
			<query>SELECT cattle FROM CattleClass cattle ORDER BY cattle.catclassName</query>
		</named-query>
		<attributes>
			<id name="cattleClassId">
				<column name="catclass_id" />
				<generated-value strategy="IDENTITY" />
			</id>
			<basic name="catclassName">
				<column name="catclass_name" length="50" unique="true" />
			</basic>
		</attributes>
	</entity>
	<entity class="com.tramex.sisoprega.dto.CattleType">
		<table name="cat_cattle_type" />
		<named-query name="ALL_CATTLETYPES">
			<description>Retrieves all cattle type records from database </description>
			<query>SELECT Cattle FROM CattleType Cattle ORDER BY Cattle.cattypeName</query>
		</named-query>
		<named-query name="CATTLETYPE_BY_ID">
			<description>Retrieve a single cattle type record using the type id</description>
			<query>SELECT Cattle FROM CattleType Cattle WHERE Cattle.cattleTypeId= :Id</query>
		</named-query>
		<named-query name="CATTLE_TYPE_BY_CLASS_ID">
			<description>Retrieve the cattle types associated with a cattle class</description>
			<query>SELECT Cattle FROM CattleType Cattle WHERE Cattle.catclassId = :catClassId</query>
		</named-query>
		<attributes>
			<id name="cattleTypeId">
				<column name="cattype_id" />
				<generated-value strategy="IDENTITY" />
			</id>
			<basic name="catclassId">
				<column name="catclass_id" />
			</basic>
			<basic name="cattypeName">
				<column name="cattype_name" />
			</basic>
		</attributes>
	</entity>
	<entity class="com.tramex.sisoprega.dto.Location">
		<table name="cat_location" />
		<named-query name="CAT_LOCATION_BY_ID">
			<description>Retrieves a single catLocation record by ID</description>
			<query>SELECT loc FROM Location loc WHERE loc.locationId = :Id</query>
		</named-query>
		<named-query name="ALL_LOCATIONS">
			<description>Retrieves all catalog location records from database</description>
			<query>SELECT loc FROM Location loc ORDER BY loc.locationName</query>
		</named-query>
		<attributes>
			<id name="locationId">
				<column name="location_id" />
				<generated-value strategy="IDENTITY" />
			</id>
			<basic name="locationName">
				<column name="location_name" />
			</basic>
		</attributes>
	</entity>
	<entity class="com.tramex.sisoprega.dto.Pen">
		<table name="cat_barnyard" />
		<named-query name="PEN_BY_ID">
			<description>Retrieves a single catBarnyard record by ID</description>
			<query>SELECT bar FROM Pen bar WHERE bar.penId = :Id</query>
		</named-query>
		<named-query name="PEN_BY_LOCATION">
			<description>Retrieves a list of barnyards given its location id</description>
			<query>SELECT barn FROM Pen barn WHERE barn.locationId = :locationId ORDER BY barn.barnyardCode</query>
		</named-query>
		<named-query name="ALL_PENS">
			<description>Retrieves all barnyard records from database.</description>
			<query>SELECT barn FROM Pen barn ORDER BY barn.barnyardCode</query>
		</named-query>
		<attributes>
			<id name="penId">
				<column name="barnyard_id" />
				<generated-value strategy="IDENTITY" />
			</id>
			<basic name="available">
				<column name="available" />
			</basic>
			<basic name="barnyardCode">
				<column name="barnyard_code" />
			</basic>
			<basic name="locationId">
				<column name="zone_id" />
			</basic>
			<one-to-many name="penCapacity" mapped-by="pen" target-entity="com.tramex.sisoprega.dto.PenCapacity" fetch="EAGER" orphan-removal="true">
				<cascade>
					<cascade-all/>
				</cascade>
			</one-to-many>
		</attributes>
	</entity>
	<entity class="com.tramex.sisoprega.dto.PenCapacity">
		<table name="cat_barnyard_capacity" />
		<named-query name="PENCAPACITY_BY_ID">
			<description>Retrieves a single catBarnyardCapacity record by ID</description>
			<query>SELECT barCa FROM PenCapacity barCa WHERE barCa.penCapacityId = :Id</query>
		</named-query>
		<named-query name="BARNYARD_CAPACITY_BY_BARNYARD_AND_CATTLE">
			<description>Retrieves a single barnyard capacity record using the barnyard and the cattle</description>
			<query>SELECT capacity FROM PenCapacity capacity WHERE capacity.pen.penId = :barnyardId AND capacity.catclassId = :cattleClassId</query>
		</named-query>
		<named-query name="ALL_BARNYARD_CAPACITIES">
			<description>Get all records of barnyard capacities in database</description>
			<query>SELECT barCa FROM PenCapacity barCa</query>
		</named-query>
		<attributes>
			<id name="penCapacityId">
				<column name="capacity_id" />
				<generated-value strategy="IDENTITY" />
			</id>
			<basic name="catclassId">
				<column name="catclass_id" />
			</basic>
			<basic name="headCount">
				<column name="head_count" />
			</basic>
			<many-to-one name="pen" optional="false">
				<join-column name="barnyard_id" referenced-column-name="barnyard_id" nullable="false" />
			</many-to-one>
		</attributes>
	</entity>
	<entity class="com.tramex.sisoprega.dto.MeasurementUnit">
		<table name="cat_measurement_unit" />
		<named-query name="CAT_MEASUREMENTUNIT_BY_ID">
			<description>Retrieves a single catMeasurementUnit record by ID</description>
			<query>SELECT MeaUni FROM MeasurementUnit MeaUni WHERE MeaUni.measurementUnitId = :Id</query>
		</named-query>
		<named-query name="ALL_MEASUREMENT_UNITS">
			<description>Retrieves all measurement units from database.</description>
			<query>SELECT mu FROM MeasurementUnit mu ORDER BY mu.unitAbreviation</query>
		</named-query>
		<attributes>
			<id name="measurementUnitId">
				<column name="unit_id" />
				<generated-value strategy="IDENTITY" />
			</id>
			<basic name="unitName">
				<column name="unit_name" />
			</basic>
			<basic name="unitAbreviation">
				<column name="Unit_abreviation" />
			</basic>
		</attributes>
	</entity>
	<entity class="com.tramex.sisoprega.dto.MeasurementUnitEquivalence">
		<table name="cat_measurement_unit_equivalence" />
		<named-query name="CAT_MEASUREMENTUNITEQUIVALENCE_BY_ID">
			<description>Retrieves a single catMeasurementUnitEquivalence record by ID</description>
			<query>SELECT MeaUnEq FROM MeasurementUnitEquivalence MeaUnEq WHERE MeaUnEq.measurementUnitEquivalenceId = :Id</query>
		</named-query>
		<named-query name="EQUIVALENCE_BY_UNIT_ID">
			<description>Retrieves the equivalence of a given unit id</description>
			<query>SELECT equivalence FROM MeasurementUnitEquivalence equivalence WHERE equivalence.unitSrc = :unitId</query>
		</named-query>
		<attributes>
			<id name="measurementUnitEquivalenceId">
				<column name="equivalence_id" />
				<generated-value strategy="IDENTITY" />
			</id>
			<basic name="equivalence">
				<column name="equivalence" />
			</basic>
			<basic name="unitDest">
				<column name="unit_dest" />
			</basic>
			<basic name="unitSrc">
				<column name="unit_src" />
			</basic>
		</attributes>
	</entity>
	<entity class="com.tramex.sisoprega.dto.Reception">
		<table name="ctrl_reception" />
		<named-query name="RECEPTION_BY_ID">
			<description>Retrieves a single crtReception record by ID</description>
			<query>SELECT Recep FROM Reception Recep WHERE Recep.receptionId = :Id</query>
		</named-query>
		<named-query name="ALL_RECEPTIONS">
			<description>Retrieves all reception records from database.</description>
			<query>SELECT rec FROM Reception rec WHERE not rec.pen is empty ORDER BY rec.rancherId</query>
		</named-query>
		<named-query name="RECEPTIONS_BY_RANCHER_ID">
			<description>Retrieves all reception records from database by rancher ID</description>
			<query>SELECT rec FROM Reception rec WHERE rec.rancherId=:rancherID</query>
		</named-query>
		<attributes>
			<id name="receptionId">
				<column name="reception_id" />
				<generated-value strategy="IDENTITY" />
			</id>
			<basic name="dateAllotted">
				<column name="date_allotted" />
				<temporal>TIMESTAMP</temporal>
			</basic>
			<basic name="rancherId">
				<column name="rancher_id" />
			</basic>
			<basic name="locationId">
				<column name="location_id" />
			</basic>
			<basic name="zoneId">
				<column name="zone_id" />
			</basic>
			<basic name="cattleType">
				<column name="cattle_type" />
			</basic>
			<one-to-many name="receptionHeadcount" fetch="EAGER" mapped-by="reception" target-entity="com.tramex.sisoprega.dto.ReceptionHeadcount" orphan-removal="true">
				<cascade>
					<cascade-all/>
				</cascade>
			</one-to-many>
			<one-to-many name="feedOrder" fetch="EAGER" mapped-by="reception" target-entity="com.tramex.sisoprega.dto.FeedOrder" orphan-removal="true">
				<cascade>
					<cascade-all/>
				</cascade>
			</one-to-many>
			<one-to-many name="inspection" fetch="EAGER" mapped-by="reception" target-entity="com.tramex.sisoprega.dto.Inspection" orphan-removal="true">
				<cascade>
					<cascade-all/>
				</cascade>
			</one-to-many>
			<one-to-many name="pen" fetch="LAZY">
				<join-table name="ctrl_reception_barnyard">
					<join-column name="reception_id" referenced-column-name="reception_id" />
					<inverse-join-column name="barnyard_id" referenced-column-name="barnyard_id" />
				</join-table>
			</one-to-many>
		</attributes>
	</entity>
	<entity class="com.tramex.sisoprega.dto.ReceptionHeadcount">
		<table name="ctrl_reception_headcount" />
		<attributes>
			<id name="receptionHeadcountId">
				<column name="headcount_id" />
				<generated-value strategy="IDENTITY" />
			</id>
			<basic name="hc">
				<column name="hc" />
			</basic>
			<basic name="weight">
				<column name="weight" />
			</basic>
			<basic name="weightUom">
				<column name="weight_uom" />
			</basic>
			<many-to-one name="reception" fetch="LAZY" optional="false" >
				<join-column name="reception_id" referenced-column-name="reception_id" nullable="false"/>
			</many-to-one>
		</attributes>
	</entity>
	<entity class="com.tramex.sisoprega.dto.Food">
		<table name="cat_food" />
		<named-query name="CAT_FOOD_BY_ID">
			<description>Retrieves a single crtFood record by ID</description>
			<query>SELECT fod FROM Food fod WHERE fod.foodId = :Id</query>
		</named-query>
		<named-query name="ALL_FOOD">
			<description>Retrieves all records for food in database.</description>
			<query>SELECT f FROM Food f ORDER BY f.foodName</query>
		</named-query>
		<attributes>
			<id name="foodId">
				<column name="food_id" />
				<generated-value strategy="IDENTITY" />
			</id>
			<basic name="foodName">
				<column name="food_name" />
			</basic>
		</attributes>
	</entity>
	<entity class="com.tramex.sisoprega.dto.FeedOrder">
		<table name="ctrl_feed_order" />
		<attributes>
			<id name="feedOrderId">
				<column name="order_id" />
				<generated-value strategy="IDENTITY" />
			</id>
			<basic name="feedDate">
				<column name="feed_date" />
				<temporal>TIMESTAMP</temporal>
			</basic>
			<basic name="feedOriginator">
				<column name="feed_originator" />
			</basic>
			<basic name="handling">
				<column name="handling" />
			</basic>
			<many-to-one name="reception" fetch="LAZY" optional="false">
				<join-column name="reception_id" referenced-column-name="reception_id" nullable="false" />
			</many-to-one>
			<one-to-many name="feedOrderDetails" fetch="EAGER" mapped-by="feedOrder" target-entity="com.tramex.sisoprega.dto.FeedOrderDetails" orphan-removal="true">
				<cascade>
					<cascade-all/>
				</cascade>
			</one-to-many>
			<one-to-many name="pen" fetch="EAGER">
				<join-table name="ctrl_feed_order_barnyard">
					<join-column name="order_id" referenced-column-name="order_id" />
					<inverse-join-column name="barnyard_id" referenced-column-name="barnyard_id" />
				</join-table>
			</one-to-many>
		</attributes>
	</entity>
	<entity class="com.tramex.sisoprega.dto.FeedOrderDetails">
		<table name="ctrl_feed_order_details" />
		<attributes>
			<id name="feedOrderDetailsId">
				<column name="id" />
				<generated-value strategy="IDENTITY" />
			</id>
			<basic name="foodId">
				<column name="food_id" />
			</basic>
			<basic name="quantity">
				<column name="quantity" />
			</basic>
			<many-to-one name="feedOrder" fetch="LAZY" optional="false">
				<join-column name="order_id" referenced-column-name="order_id" nullable="false" />
			</many-to-one>
		</attributes>
	</entity>
	<entity class="com.tramex.sisoprega.dto.Inspection">
		<table name="ctrl_inspection" />
		<attributes>
			<id name="inspectionId">
				<column name="inspection_id" />
				<generated-value strategy="IDENTITY" />
			</id>
			<basic name="inspectionDate">
				<column name="inspection_date" />
				<temporal>TIMESTAMP</temporal>
			</basic>
			<basic name="comments">
				<column name="comments" />
			</basic>
			<basic name="weight">
				<column name="weight" />
			</basic>
			<basic name="weightUom">
				<column name="weight_uom" />
			</basic>
			<many-to-one name="reception" fetch="LAZY" optional="false" >
				<join-column name="reception_id" referenced-column-name="reception_id" nullable="true" />
			</many-to-one>
			<one-to-many name="pen" fetch="EAGER">
				<join-table name="ctrl_inspection_barnyard">
					<join-column name="inspection_id" referenced-column-name="inspection_id" />
					<inverse-join-column name="barnyard_id" referenced-column-name="barnyard_id" />
				</join-table>
			</one-to-many>
			<one-to-many name="inspectionDetails" fetch="EAGER" mapped-by="inspection" target-entity="com.tramex.sisoprega.dto.InspectionDetails" orphan-removal="true">
				<cascade>
					<cascade-all/>
				</cascade>
			</one-to-many>
		</attributes>
	</entity>
	<entity class="com.tramex.sisoprega.dto.InspectionDetails">
		<table name="ctrl_inspection_result" />
		<attributes>
			<id name="inspectionDetailsId">
				<column name="id" />
				<generated-value strategy="IDENTITY" />
			</id>
			<basic name="inspectionCodeId">
				<column name="inspection_code_id" />
			</basic>
			<basic name="hc">
				<column name="hc" />
			</basic>
			<basic name="weight">
				<column name="weight" />
			</basic>
			<basic name="weightUom">
				<column name="weight_uom" />
			</basic>
			<basic name="note">
				<column name="note" />
			</basic>
			<many-to-one name="inspection" fetch="LAZY" optional="false">
				<join-column name="inspection_id" referenced-column-name="inspection_id" nullable="false" />				
			</many-to-one>
		</attributes>
	</entity>
	<entity class="com.tramex.sisoprega.dto.InspectionCode">
		<table name="cat_inspection_code" />
		<named-query name="CAT_INSPECTIONCODE_BY_ID">
			<description>Retrieves a single crtFood record by ID</description>
			<query>SELECT InspCod FROM InspectionCode InspCod WHERE InspCod.inspectionCodeId = :Id</query>
		</named-query>
		<named-query name="ALL_INSPECTION_CODES">
			<description>Retrieves all inspection codes from database</description>
			<query>SELECT ic FROM InspectionCode ic ORDER BY ic.inspectionCodeDescription</query>
		</named-query>
		<attributes>
			<id name="inspectionCodeId">
				<column name="inspection_code_id" />
				<generated-value strategy="IDENTITY" />
			</id>
			<basic name="inspectionCodeDescription">
				<column name="inspection_code_description" />
			</basic>
		</attributes>
	</entity>
	<entity class="com.tramex.sisoprega.dto.InspectionForecast">
		<table name="ctrl_inspection_forecast" />
		<named-query name="ALL_INSPECTIONFORECASTS">
			<description>Retrieves all inspection forecasts in database</description>
			<query>SELECT forecast FROM InspectionForecast forecast ORDER BY forecast.forecastDate</query>
		</named-query>
		<named-query name="INSPECTIONFORECAST_BY_DATE">
			<description>Retrieves a single record that represents the inspection forecast for the given date</description>
			<query>SELECT forecast FROM InspectionForecast forecast WHERE forecast.forecastDate = :forecastDate</query>
		</named-query>
		<attributes>
			<id name="inspectionForecastId">
				<column name="id" />
				<generated-value strategy="IDENTITY" />
			</id>
			<basic name="forecastDate">
				<column name="forecast_date" />
				<temporal>DATE</temporal>
			</basic>
			<basic name="locked">
				<column name="locked"/>
			</basic>
			<one-to-many name="inspectionForecastDetail" fetch="EAGER" target-entity="com.tramex.sisoprega.dto.InspectionForecastDetail" mapped-by="inspectionForecast" orphan-removal="true">
				<cascade>
					<cascade-all/>
				</cascade>
			</one-to-many>
		</attributes>
	</entity>
	<entity class="com.tramex.sisoprega.dto.InspectionForecastDetail">
		<table name="ctrl_inspection_forecast_detail" />
		<attributes>
			<id name="inspectionForecastDetailId">
				<column name="id" />
				<generated-value strategy="IDENTITY" />
			</id>
			<basic name="rancherId">
				<column name="rancher_id" />
			</basic>
			<basic name="zoneId">
				<column name="zone_id" />
			</basic>
			<basic name="cattleType">
				<column name="cattle_type" />
			</basic>
			<many-to-one name="inspectionForecast" optional="false" fetch="LAZY">
				<join-column name="forecast_id" referenced-column-name="id" nullable="false" />
			</many-to-one>
			<one-to-many name="pen" fetch="EAGER" >
				<join-table name="ctrl_inspection_forecast_barnyard">
					<join-column name="detail_id" referenced-column-name="id" />
					<inverse-join-column name="barnyard_id" referenced-column-name="barnyard_id" />
				</join-table>
			</one-to-many>
		</attributes>
	</entity>
	<entity class="com.tramex.sisoprega.identity.dto.User">
		<table name="sys_sisoprega_user" />
		<named-query name="USER_BY_NAME">
			<description>Retrieves a single record by the given user name</description>
			<query>SELECT u FROM User u WHERE u.userName = :userName</query>
		</named-query>
		<named-query name="ALL_NO_RANCHER_USERS">
			<description>Retrieves all users not assiged to rancher group for administration purposes.</description>
			<query>SELECT DISTINCT u FROM User u LEFT JOIN u.groups r WHERE NOT r.role_name = "rancher" OR r.role_name IS NULL</query>
		</named-query>
		<attributes>
			<id name="userName">
				<column name="user_name" />
			</id>
			<basic name="password">
				<column name="user_password" />
			</basic>
			<one-to-many name="groups">
				<join-column name="user_name" referenced-column-name="user_name" />
				<cascade>
					<cascade-all />
				</cascade>
			</one-to-many>
		</attributes>
	</entity>
	<entity class="com.tramex.sisoprega.identity.dto.Role">
		<table name="sys_sisoprega_role" />
		<attributes>
			<id name="record_id">
				<generated-value strategy="IDENTITY" />
			</id>
		</attributes>
	</entity>

	<!-- **************************************************************************** -->
	<!-- ENTITIES FOR I2 -->
	<!-- **************************************************************************** -->
	<entity class="com.tramex.sisoprega.dto.Hermana">
		<table name="ctrl_hermana" />
		<attributes>
			<id name="hermanaId">
				<column name="hermana_id" />
				<generated-value strategy="IDENTITY" />
			</id>
			<basic name="entryNo">
				<column name="entry_no" />
			</basic>
			<basic name="refNo">
				<column name="ref_no" />
			</basic>
			<basic name="consignee" />
			<basic name="accountOf">
				<column name="account_of" />
			</basic>
			<basic name="rancherId">
				<column name="rancher_id" />
			</basic>
			<basic name="hermanaBy">
				<column name="hermana_by" />
			</basic>
			<basic name="deWhen">
				<column name="de_when" />
				<temporal>TIMESTAMP</temporal>
			</basic>
		</attributes>
	</entity>
	<entity class="com.tramex.sisoprega.dto.CattleQuality">
		<table name="cat_cattle_quality" />
		<named-query name="CATTLE_QUALITY_BY_ID">
			<description>Retrieves a single cattle quality record based on its unique id</description>
			<query>SELECT cq FROM CattleQuality cq WHERE cq.qualityId = :Id</query>
		</named-query>
		<named-query name="ALL_CATTLE_QUALITY">
			<description>Retrieves all records from database</description>
			<query>SELECT cq FROM CattleQuality cq ORDER BY cq.qualityName</query>
		</named-query>
		<attributes>
			<id name="qualityId">
				<column name="quality_id" />
				<generated-value strategy="IDENTITY" />
			</id>
			<basic name="qualityName">
				<column name="quality_name" />
			</basic>
			<basic name="minWeight">
				<column name="min_weight" />
			</basic>
			<basic name="maxWeight">
				<column name="max_weight" />
			</basic>
			<basic name="forHorses">
				<column name="for_horses" />
			</basic>
		</attributes>
	</entity>
	<entity class="com.tramex.sisoprega.dto.HermanaCorteExportador">
		<table name="ctrl_hermana_corte_exportador" />
		<attributes>
			<id name="hermanaCorteExportadorId">
				<column name="corte_expo" />
				<generated-value strategy="IDENTITY" />
			</id>
			<basic name="hermanaId">
				<column name="hermana_id" />
			</basic>
			<basic name="qualityId">
				<column name="quality_id" />
			</basic>
			<basic name="purchasePrice">
				<column name="purchase_price" />
			</basic>
		</attributes>
	</entity>
	<entity class="com.tramex.sisoprega.dto.HermanaCorte">
		<table name="ctrl_hermana_corte" />
		<attributes>
			<id name="hermanaCorteId">
				<column name="corte" />
				<generated-value strategy="IDENTITY" />
			</id>
			<basic name="hermanaId">
				<column name="hermana_id" />
			</basic>
			<basic name="barnyardId">
				<column name="barnyard_id" />
			</basic>
			<basic name="qualityId">
				<column name="quality_id" />
			</basic>
			<basic name="corteExpo">
				<column name="corte_expo" />
			</basic>
			<basic name="heads">
				<column name="heads" />
			</basic>
			<basic name="weight">
				<column name="weight" />
			</basic>
		</attributes>
	</entity>
	<entity class="com.tramex.sisoprega.dto.ExpenseConcept">
		<table name="cat_expense_concept" />
		<attributes>
			<id name="expenseConceptId">
				<column name="concept_id" />
				<generated-value strategy="IDENTITY" />
			</id>
			<basic name="conceptName">
				<column name="concept_name" />
			</basic>
			<basic name="expenseFormula">
				<column name="expense_formula" />
			</basic>
		</attributes>
	</entity>
	<entity class="com.tramex.sisoprega.dto.HermanaExpense">
		<table name="ctrl_hermana_expense" />
		<attributes>
			<id name="hermanaExpenseId">
				<column name="expense_id" />
				<generated-value strategy="IDENTITY" />
			</id>
			<basic name="hermanaId">
				<column name="hermana_id" />
			</basic>
			<basic name="conceptId">
				<column name="concept_id" />
			</basic>
		</attributes>
	</entity>
	<entity class="com.tramex.sisoprega.dto.Seller">
		<table name="cat_seller" />
		<named-query name="SELLER_BY_ID">
			<description>Retrieve a single seller record by it's ID</description>
			<query>SELECT iSeller FROM Seller iSeller WHERE iSeller.sellerId = :Id</query>
		</named-query>
		<named-query name="ALL_SELLERS">
			<description>Retrieve all seller records from database.</description>
			<query>SELECT iSeller FROM Seller iSeller</query>
		</named-query>
		<attributes>
			<id name="sellerId">
				<column name="seller_id" />
				<generated-value strategy="IDENTITY" />
			</id>
			<basic name="sellerName">
				<column name="seller_name" />
			</basic>
			<basic name="addressOne">
				<column name="address_one" />
			</basic>
			<basic name="addressTwo">
				<column name="address_two" />
			</basic>
			<basic name="addressState">
				<column name="address_state" />
			</basic>
			<basic name="zipCode">
				<column name="zip_code" />
			</basic>
		</attributes>
	</entity>
	<entity class="com.tramex.sisoprega.dto.Purchase">
		<table name="ctrl_purchase" />
		<attributes>
			<id name="purchaseId">
				<column name="purchase_id" />
				<generated-value strategy="IDENTITY" />
			</id>
			<basic name="sellerId">
				<column name="seller_id" />
			</basic>
			<basic name="cattleTypeId">
				<column name="cattype_id" />
			</basic>
		</attributes>
	</entity>
	<entity class="com.tramex.sisoprega.dto.PurchaseDetail">
		<table name="ctrl_purchase_detail" />
		<attributes>
			<id name="purchaseDetailId">
				<column name="record_id" />
				<generated-value strategy="IDENTITY" />
			</id>
			<basic name="barnyardId">
				<column name="barnyard_id" />
			</basic>
			<basic name="qualityId">
				<column name="quality_id" />
			</basic>
		</attributes>
	</entity>
</entity-mappings>
